{"mappings":"qeAEA,EAFAA,EAAA,SAEAC,mBAAkB,OACfC,MAAKC,IACJC,QAAQC,IAAIF,GACZ,IAAIG,EAAcC,KAAKC,MAAML,EAASM,aAGtC,MAAMC,EACE,qCADFA,EAEE,qCAFFA,EAGG,sCAGHC,EARM,CAAC,GAAI,GAAI,GAAI,GAAI,IAQNC,KAAIC,GACL,IAAhBP,EASKI,EARHJ,EAAc,GAChBA,GAAe,EACRI,GACiB,GAAfJ,GACTA,GAAe,EACRI,QAFF,IAUX,OADAN,QAAQC,IAAIM,GACLA,CAAQ,IAEhBG,OAAMC,GAASX,QAAQC,IAAIU","sources":["src/js/card-markup.js"],"sourcesContent":["import { fetchMovieDetails } from './fetches/fetch-movie-details.js';\n\nfetchMovieDetails(54235)\n  .then(responce => {\n    console.log(responce);\n    let fixedRating = Math.round(responce.voteAverage);\n    let array = ['', '', '', '', ''];\n\n    const valueChoose = {\n      full: './images/icons/stars/star-full.svg',\n      half: './images/icons/stars/star-half.svg',\n      empty: './images/icons/stars/star-empty.svg',\n    };\n\n    const newArray = array.map(star => {\n      if (fixedRating !== 0) {\n        if (fixedRating > 2) {\n          fixedRating -= 2;\n          return valueChoose.full;\n        } else if (fixedRating == 1) {\n          fixedRating -= 1;\n          return valueChoose.half;\n        }\n      } else {\n        return valueChoose.empty;\n      }\n    }\n    );\n    console.log(newArray);\n    return newArray;\n  })\n  .catch(error => console.log(error));"],"names":["parcelRequire","fetchMovieDetails","then","responce","console","log","fixedRating","Math","round","voteAverage","valueChoose","newArray","map","star","catch","error"],"version":3,"file":"templates.9f11f857.js.map"}